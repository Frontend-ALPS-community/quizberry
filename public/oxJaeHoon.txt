js

1. 화살표 함수는 개체에서 메서드로 사용할 수 있습니다. (o)
2. 'let' 키워드는 블록 범위 변수 선언을 허용합니다. (o)
3. const' 키워드를 사용하면 변수를 새 값으로 재할당할 수 있습니다. (x)
4. ES6의 템플릿 리터럴은 이스케이프 문자 없이 여러 줄 문자열을 지원합니다. (o)
5. 'spread' 연산자는 배열에서만 사용할 수 있으며 개체에서는 사용할 수 없습니다. (x)
6. Destructuring Assignment를 사용하면 배열 및 개체의 값을 고유 변수로 풀 수 있습니다. (o)
7. ES6는 객체와 그 프로토타입을 정의하기 위한 'class' 구문을 도입했습니다. (o)
8. ES6의 'Map' 개체를 사용하면 키-값 쌍을 문자열뿐만 아니라 모든 유형의 키로 저장할 수 있습니다. (o)
9. ES6, 콜백 기반 접근방식 대체 비동기 프로그래밍을 위한 'Promise' 객체 도입 (o)
10. ES6의 'for...of' 루프는 배열, 문자열 또는 집합과 같은 반복 가능한 개체의 값을 반복하는 데 사용할 수 있습니다. (o)

TypeScript

1. TypeScript는 화살표 기능과 템플릿 리터럴 등의 ES6 기능을 지원합니다. (o)
2. TypeScript의 'interface' 키워드를 사용하여 선택 속성을 가진 개체 유형을 정의할 수 있습니다. (o)
3. TypeScript의 'enum' 유형을 사용하면 명명된 상수 집합을 정의할 수 있습니다. (o)
4. TypeScript의 'any' type은 변수를 하나의 특정 데이터 유형으로만 제한합니다. (x)
5. TypeScript는 정적 타이핑을 지원하여 개발자가 변수, 함수 파라미터 및 반환 값에 대한 유형을 선언할 수 있도록 합니다. (o)
6. TypeScript의 'readonly' 수식어를 사용하면 초기화 후 수정할 수 있는 속성을 만들 수 있습니다. (x)
7. TypeScript의 'namespace' 기능을 사용하면 코드를 논리적 그룹으로 구성하여 명명 충돌을 방지할 수 있습니다. (o)
8. TypeScript의 '추상' 클래스 키워드를 사용하면 직접 인스턴스화할 수 없지만 다른 클래스의 기본 클래스로 사용할 수 있는 클래스를 만들 수 있습니다. (o)
9. TypeScript의 'as' 키워드는 TypeScript의 추론된 유형을 덮어쓸 수 있도록 TypeScript의 'as' 키워드를 사용합니다. (o)
10. TypeScript의 'async/await' 구문은 비동기 코드를 사용할 수 있는 편리한 방법을 제공하여 비동기 기능을 쉽게 작성하고 이해할 수 있습니다. (o)

NextJS


1. next.js 버전 14는 웹팩 5에 대한 내장 지원을 소개합니다. (o)
2. next.js 버전 14는 외부 디렉토리를 활성화하기 위해 'experiment: { externalDir: true}'라는 새로운 'next.config.js' 옵션을 도입합니다. (o)
3. Next.js 버전 14에서는 이제 ISR(Incremental Static Regeneration)이 미리보기 모드를 지원하여 전체 사이트를 재구축하지 않고도 동적인 콘텐츠 업데이트가 가능합니다. (o)
4. next.js 버전 14는 HMR(Hot Module Replacement) 시 컴포넌트 상태를 보존하여 보다 빠른 개발 피드백을 제공하는 새로운 '리액트-리프레시' 모드를 도입합니다. (o)
5. Next.js 버전 14는 Node.js 12.(o)보다 오래된 Node.js 버전에 대한 지원을 제거합니다
6. next.js 버전 14는 웹팩의 대안으로 Vite에 대한 내장 지원을 소개합니다. (x)
7. next.js 버전 14는 이미지를 자동으로 최적화하여 더 나은 성능을 제공하는 새로운 'next/image' 컴포넌트를 도입합니다. (o)
8. next.js 버전 14는 개발 중 핫 리로딩 속도를 크게 향상시키는 새로운 '리액트-패스트-리프레쉬' 모드를 도입합니다. (o)
9. next.js 버전 14는 웹 워커에 대한 실험적 지원을 가능하게 하는 새로운 'next dev - experiment-workers' 플래그를 도입합니다. (o)
10. next.js 버전 14는 페이지와 API 경로의 기본 언어로 TypeScript에 대한 내장 지원을 소개합니다. (o)

